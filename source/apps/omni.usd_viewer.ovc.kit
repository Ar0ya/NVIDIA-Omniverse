# SPDX-FileCopyrightText: Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: LicenseRef-NvidiaProprietary
#
# NVIDIA CORPORATION, its affiliates and licensors retain all intellectual
# property and proprietary rights in and to this material, related
# documentation and any modifications thereto. Any use, reproduction,
# disclosure or distribution of this material and related documentation
# without an express license agreement from NVIDIA CORPORATION or
# its affiliates is strictly prohibited.

[package]
title = "USD Viewer"
version = "2023.2.2"
keywords = [
	"app"
]


[dependencies]
# Items listed in this section are dependencies that this OV application requires.
# This is the main USD Explorer kit file. All of the settings and dependencies in there are also dependencies
# for this cloud based version of the application.
"my_company.my_usd_viewer" = {}

# This extension controls what occurs when a scene is loaded on a streaming instances of USD Explorer
"omni.kit.livestream.webrtc" = {}


[settings.app]
livestream.enabled = true

# Allows the client application to determine streaming resolution.
livestream.allowResize = true

livestream.webrtcEtli = true

# Only log error or critical level issues.
livestream.logLevel = "error"

livestream.proto = "ws"

# Scale the application window to match the size & aspect ratio of the monitor.
window.scaleToMonitor = true

# Informs certain extensions that they are running on a cloud deployment of the application.
ovc_deployment = true


[settings.persistent.app.extensions]
# More verbose logging
console.filterLevel = -2


[settings.app.exts]
# This list is a collection of relative paths from application to folders where
# extensions and dependencies are located.
folders.'++' = ["${app}/../exts", "${app}/../apps", "${app}/../extscache"]


[settings.app.extensions]
generateVersionLockExclude = ["my_company.my_usd_viewer"]
fsWatcherEnabled = false

# Skip checking supported platform/config when building
supportedTargets.platform = []


[settings.exts]
"omni.kit.viewport.navigation.camera_manipulator".defaultOperation = "orbit" # Orbit ON by default
"omni.kit.window.cursor".disabled = true # disable omni.kit.window.cursor
"omni.ui".Window.enableDetach = false
"omni.activity.ui".auto_save_location = "app/out"

# Ensures that interactions with the application's menus are logged.
"omni.kit.menu.utils".logDeprecated = false

"omni.kit.window.content_browser".show_download_menuitem = false

# Do not allow connections to new servers when running on OVC.
"omni.kit.window.filepicker".show_add_new_connection = false

# Do not display the buttons to open log files when running on OVC
"omni.kit.window.console".showOpenLogButtons = false

# Disable custom cursors.
"omni.kit.window.cusor".disabled = true

# Do not show the local filesystem in the content browser
"omni.kit.window.content_browser".show_only_collections = ["bookmarks", "omniverse", "",]

# Do not show the local file system in the filepicker.
"omni.kit.window.filepicker".show_only_collections = ["bookmarks", "omniverse", "",]

"omni.ui.window".enableDetach = false

[settings.log]
# Sets the relative path to where the log file for this application is stored.
file = "app/out/kit.log"
fileLogLevel = "verbose" # more verbose logging
channels."*" = "info" # more verbose logging
channels."omni.client.plugin" = "verbose" # more verbose logging
enableStandardStreamOutput = true
outputStreamLevel = "verbose"


[settings]
# Do not check if the GPU drivers are verified
rtx.verifyDriverVersion.enabled = false
rtx.post.aa.op = 3
rtx.post.dlss.execMode = 1  # DLSS mode: balanced

# Disable the realm.timeout.
realm.timeout = 0
privacy.userId = "${USER_ID}"
rendergraph.maxFramesInFlight = 2 # Reduce click-to-photon
renderer.debug.aftermath.enabled = true # OM-92259 vincentz: enable GPU crash report
plugins."carb.tasking.plugin".threadCount = 16
